// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DELIVERIER
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  cpf      String @unique
  password String

  role Role @default(DELIVERIER)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  orders Order[]

  @@map("users")
}

model Recipient {
  id String @id @default(uuid())

  name       String
  cpf        String
  phone      String
  street     String
  number     String
  complement String?
  district   String
  city       String
  state      String
  zipCode    String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  orders Order[]

  @@map("recipients")
}

enum OrderStatus {
  CREATED
  WAITING
  PICKUP
  DELIVERED
  RETURNED
}

model Order {
  id           String      @id @default(uuid())
  recipientId  String
  deliverierId String?
  status       OrderStatus @default(CREATED)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  deliverier User? @relation(fields: [deliverierId], references: [id])

  recipient Recipient @relation(fields: [recipientId], references: [id])

  @@map("orders")
}
